<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.11.0" type="baseline" client="gradle" dependencies="false" name="AGP (8.11.0)" variant="all" version="8.11.0">

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.bouncycastle:bcprov-jdk18on; not included in Android: `javax.naming.directory`. Referenced from `org.bouncycastle.jce.provider.CrlCache`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk18on/1.80/e22100b41042decf09cab914a5af8d2c57b5ac4a/bcprov-jdk18on-1.80.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.bouncycastle:bcprov-jdk18on; not included in Android: `javax.naming`. Referenced from `org.bouncycastle.jce.provider.X509LDAPCertStoreSpi`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.bouncycastle/bcprov-jdk18on/1.80/e22100b41042decf09cab914a5af8d2c57b5ac4a/bcprov-jdk18on-1.80.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.mockito:mockito-core; not included in Android: `javax.tools`. Referenced from `org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.mockito/mockito-core/2.25.0/1fcf2f6944d69b6f39cd579718d8b5395a97836b/mockito-core-2.25.0.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:resources; not included in Android: `javax.xml.stream`. Referenced from `org.robolectric.res.NodeHandler`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/resources/4.15.1/28ebb91428dc5ba7d76df977b2df5e9527050ec9/resources-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:shadows-framework; not included in Android: `java.awt.geom`. Referenced from `org.robolectric.shadows.CachedPathIteratorFactory`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/shadows-framework/4.15.1/9892fab474ea03b95edab6f92c358c6500ce6d1e/shadows-framework-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:shadows-framework; not included in Android: `java.awt.image`. Referenced from `org.robolectric.shadows.AutoValue_ImageUtil_RobolectricBufferedImage`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/shadows-framework/4.15.1/9892fab474ea03b95edab6f92c358c6500ce6d1e/shadows-framework-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:shadows-framework; not included in Android: `java.awt`. Referenced from `org.robolectric.shadows.ImageUtil`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/shadows-framework/4.15.1/9892fab474ea03b95edab6f92c358c6500ce6d1e/shadows-framework-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:shadows-framework; not included in Android: `javax.imageio.stream`. Referenced from `org.robolectric.shadows.ImageUtil`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/shadows-framework/4.15.1/9892fab474ea03b95edab6f92c358c6500ce6d1e/shadows-framework-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:shadows-framework; not included in Android: `javax.imageio`. Referenced from `org.robolectric.shadows.ImageUtil`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/shadows-framework/4.15.1/9892fab474ea03b95edab6f92c358c6500ce6d1e/shadows-framework-4.15.1.jar"/>
    </issue>

    <issue
        id="InvalidPackage"
        message="Invalid package reference in org.robolectric:utils; not included in Android: `javax.inject`. Referenced from `org.robolectric.util.inject.Injector`.">
        <location
            file="$GRADLE_USER_HOME/caches/modules-2/files-2.1/org.robolectric/utils/4.15.1/942890eb63488019cc2e142507ebf4e9dd973440/utils-4.15.1.jar"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`subSequence` is defined both as a member in class `kotlin.String` and an extension in package `kotlin.text`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="        return text.subSequence(startIndex, endIndex)"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/FakeSpannable.kt"
            line="65"
            column="16"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`getOrDefault` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="    override fun getInt(key: String, defaultValue: Int) = store.getOrDefault(key, defaultValue) as Int"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="50"
            column="59"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`getOrDefault` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="    override fun getLong(key: String, defaultValue: Long) = store.getOrDefault(key, defaultValue) as Long"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="52"
            column="61"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`getOrDefault` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="    override fun getFloat(key: String, defaultValue: Float) = store.getOrDefault(key, defaultValue) as Float"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="54"
            column="63"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`getOrDefault` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="    override fun getBoolean(key: String, defaultValue: Boolean) = store.getOrDefault(key, defaultValue) as Boolean"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="56"
            column="67"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`remove` is defined both as a member in class `kotlin.collections.MutableSet` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="        listeners.remove(listener)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="67"
            column="9"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`remove` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="            edits.remove(key)"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="109"
            column="13"/>
    </issue>

    <issue
        id="MemberExtensionConflict"
        message="`remove` is defined both as a member in class `kotlin.collections.MutableMap` and an extension in package `kotlin.collections`. The defined behavior for this is to use the member, but since the extension is explicitly imported into this file, there&apos;s a chance that this was not expected. (One common way this happens is for members to be added to a class after code was already written to use an extension)."
        errorLine1="                store.remove(key)"
        errorLine2="                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/app/pachli/core/testing/fakes/InMemorySharedPreferences.kt"
            line="126"
            column="17"/>
    </issue>

</issues>
