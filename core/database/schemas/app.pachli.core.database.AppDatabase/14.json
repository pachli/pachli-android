{
  "formatVersion": 1,
  "database": {
    "version": 14,
    "identityHash": "1853222a207568002bd5cdccf65bc5ba",
    "entities": [
      {
        "tableName": "DraftEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `accountId` INTEGER NOT NULL, `inReplyToId` TEXT, `content` TEXT, `contentWarning` TEXT, `sensitive` INTEGER NOT NULL, `visibility` INTEGER NOT NULL, `attachments` TEXT NOT NULL, `poll` TEXT, `failedToSend` INTEGER NOT NULL, `failedToSendNew` INTEGER NOT NULL, `scheduledAt` INTEGER, `language` TEXT, `statusId` TEXT, FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inReplyToId",
            "columnName": "inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentWarning",
            "columnName": "contentWarning",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "failedToSend",
            "columnName": "failedToSend",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "failedToSendNew",
            "columnName": "failedToSendNew",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduledAt",
            "columnName": "scheduledAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "statusId",
            "columnName": "statusId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_DraftEntity_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_DraftEntity_accountId` ON `${TABLE_NAME}` (`accountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `domain` TEXT NOT NULL, `accessToken` TEXT NOT NULL, `clientId` TEXT NOT NULL, `clientSecret` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `accountId` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `profilePictureUrl` TEXT NOT NULL, `profileHeaderPictureUrl` TEXT NOT NULL DEFAULT '', `notificationsEnabled` INTEGER NOT NULL, `notificationsMentioned` INTEGER NOT NULL, `notificationsFollowed` INTEGER NOT NULL, `notificationsFollowRequested` INTEGER NOT NULL, `notificationsReblogged` INTEGER NOT NULL, `notificationsFavorited` INTEGER NOT NULL, `notificationsPolls` INTEGER NOT NULL, `notificationsSubscriptions` INTEGER NOT NULL, `notificationsSignUps` INTEGER NOT NULL, `notificationsUpdates` INTEGER NOT NULL, `notificationsReports` INTEGER NOT NULL, `notificationsSeveredRelationships` INTEGER NOT NULL DEFAULT true, `notificationSound` INTEGER NOT NULL, `notificationVibration` INTEGER NOT NULL, `notificationLight` INTEGER NOT NULL, `defaultPostPrivacy` INTEGER NOT NULL, `defaultMediaSensitivity` INTEGER NOT NULL, `defaultPostLanguage` TEXT NOT NULL, `alwaysShowSensitiveMedia` INTEGER NOT NULL, `alwaysOpenSpoiler` INTEGER NOT NULL, `mediaPreviewEnabled` INTEGER NOT NULL, `notificationMarkerId` TEXT NOT NULL DEFAULT '0', `emojis` TEXT NOT NULL, `tabPreferences` TEXT NOT NULL, `notificationsFilter` TEXT NOT NULL, `oauthScopes` TEXT NOT NULL, `unifiedPushUrl` TEXT NOT NULL, `pushPubKey` TEXT NOT NULL, `pushPrivKey` TEXT NOT NULL, `pushAuth` TEXT NOT NULL, `pushServerKey` TEXT NOT NULL, `locked` INTEGER NOT NULL DEFAULT 0, `notificationAccountFilterNotFollowed` TEXT NOT NULL DEFAULT 'NONE', `notificationAccountFilterYounger30d` TEXT NOT NULL DEFAULT 'NONE', `notificationAccountFilterLimitedByServer` TEXT NOT NULL DEFAULT 'NONE')",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "accessToken",
            "columnName": "accessToken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clientId",
            "columnName": "clientId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "clientSecret",
            "columnName": "clientSecret",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profilePictureUrl",
            "columnName": "profilePictureUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "profileHeaderPictureUrl",
            "columnName": "profileHeaderPictureUrl",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          },
          {
            "fieldPath": "notificationsEnabled",
            "columnName": "notificationsEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsMentioned",
            "columnName": "notificationsMentioned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFollowed",
            "columnName": "notificationsFollowed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFollowRequested",
            "columnName": "notificationsFollowRequested",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsReblogged",
            "columnName": "notificationsReblogged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFavorited",
            "columnName": "notificationsFavorited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsPolls",
            "columnName": "notificationsPolls",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsSubscriptions",
            "columnName": "notificationsSubscriptions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsSignUps",
            "columnName": "notificationsSignUps",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsUpdates",
            "columnName": "notificationsUpdates",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsReports",
            "columnName": "notificationsReports",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationsSeveredRelationships",
            "columnName": "notificationsSeveredRelationships",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "true"
          },
          {
            "fieldPath": "notificationSound",
            "columnName": "notificationSound",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationVibration",
            "columnName": "notificationVibration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationLight",
            "columnName": "notificationLight",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultPostPrivacy",
            "columnName": "defaultPostPrivacy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultMediaSensitivity",
            "columnName": "defaultMediaSensitivity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "defaultPostLanguage",
            "columnName": "defaultPostLanguage",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "alwaysShowSensitiveMedia",
            "columnName": "alwaysShowSensitiveMedia",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alwaysOpenSpoiler",
            "columnName": "alwaysOpenSpoiler",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaPreviewEnabled",
            "columnName": "mediaPreviewEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notificationMarkerId",
            "columnName": "notificationMarkerId",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'0'"
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tabPreferences",
            "columnName": "tabPreferences",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notificationsFilter",
            "columnName": "notificationsFilter",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "oauthScopes",
            "columnName": "oauthScopes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unifiedPushUrl",
            "columnName": "unifiedPushUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushPubKey",
            "columnName": "pushPubKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushPrivKey",
            "columnName": "pushPrivKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushAuth",
            "columnName": "pushAuth",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushServerKey",
            "columnName": "pushServerKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          },
          {
            "fieldPath": "notificationAccountFilterNotFollowed",
            "columnName": "notificationAccountFilterNotFollowed",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'NONE'"
          },
          {
            "fieldPath": "notificationAccountFilterYounger30d",
            "columnName": "notificationAccountFilterYounger30d",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'NONE'"
          },
          {
            "fieldPath": "notificationAccountFilterLimitedByServer",
            "columnName": "notificationAccountFilterLimitedByServer",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'NONE'"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_AccountEntity_domain_accountId",
            "unique": true,
            "columnNames": [
              "domain",
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AccountEntity_domain_accountId` ON `${TABLE_NAME}` (`domain`, `accountId`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "InstanceInfoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`instance` TEXT NOT NULL, `maxPostCharacters` INTEGER, `maxPollOptions` INTEGER, `maxPollOptionLength` INTEGER, `minPollDuration` INTEGER, `maxPollDuration` INTEGER, `charactersReservedPerUrl` INTEGER, `version` TEXT, `videoSizeLimit` INTEGER, `imageSizeLimit` INTEGER, `imageMatrixLimit` INTEGER, `maxMediaAttachments` INTEGER, `maxFields` INTEGER, `maxFieldNameLength` INTEGER, `maxFieldValueLength` INTEGER, `enabledTranslation` INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(`instance`))",
        "fields": [
          {
            "fieldPath": "instance",
            "columnName": "instance",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxPostCharacters",
            "columnName": "maxPostCharacters",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollOptions",
            "columnName": "maxPollOptions",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollOptionLength",
            "columnName": "maxPollOptionLength",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "minPollDuration",
            "columnName": "minPollDuration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxPollDuration",
            "columnName": "maxPollDuration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "charactersReservedPerUrl",
            "columnName": "charactersReservedPerUrl",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videoSizeLimit",
            "columnName": "videoSizeLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageSizeLimit",
            "columnName": "imageSizeLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageMatrixLimit",
            "columnName": "imageMatrixLimit",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxMediaAttachments",
            "columnName": "maxMediaAttachments",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxFields",
            "columnName": "maxFields",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxFieldNameLength",
            "columnName": "maxFieldNameLength",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxFieldValueLength",
            "columnName": "maxFieldValueLength",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "enabledTranslation",
            "columnName": "enabledTranslation",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "0"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "instance"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "EmojisEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `emojiList` TEXT NOT NULL, PRIMARY KEY(`accountId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "emojiList",
            "columnName": "emojiList",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TimelineStatusEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `url` TEXT, `timelineUserId` INTEGER NOT NULL, `authorServerId` TEXT NOT NULL, `inReplyToId` TEXT, `inReplyToAccountId` TEXT, `content` TEXT, `createdAt` INTEGER NOT NULL, `editedAt` INTEGER, `emojis` TEXT, `reblogsCount` INTEGER NOT NULL, `favouritesCount` INTEGER NOT NULL, `repliesCount` INTEGER NOT NULL, `reblogged` INTEGER NOT NULL, `bookmarked` INTEGER NOT NULL, `favourited` INTEGER NOT NULL, `sensitive` INTEGER NOT NULL, `spoilerText` TEXT NOT NULL, `visibility` INTEGER NOT NULL, `attachments` TEXT, `mentions` TEXT, `tags` TEXT, `application` TEXT, `reblogServerId` TEXT, `reblogAccountId` TEXT, `poll` TEXT, `muted` INTEGER, `pinned` INTEGER NOT NULL, `card` TEXT, `language` TEXT, `filtered` TEXT, PRIMARY KEY(`serverId`, `timelineUserId`), FOREIGN KEY(`authorServerId`, `timelineUserId`) REFERENCES `TimelineAccountEntity`(`serverId`, `timelineUserId`) ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorServerId",
            "columnName": "authorServerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "inReplyToId",
            "columnName": "inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "inReplyToAccountId",
            "columnName": "inReplyToAccountId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "editedAt",
            "columnName": "editedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogsCount",
            "columnName": "reblogsCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favouritesCount",
            "columnName": "favouritesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "repliesCount",
            "columnName": "repliesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reblogged",
            "columnName": "reblogged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookmarked",
            "columnName": "bookmarked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "favourited",
            "columnName": "favourited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sensitive",
            "columnName": "sensitive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "spoilerText",
            "columnName": "spoilerText",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mentions",
            "columnName": "mentions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "application",
            "columnName": "application",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogServerId",
            "columnName": "reblogServerId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reblogAccountId",
            "columnName": "reblogAccountId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "muted",
            "columnName": "muted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pinned",
            "columnName": "pinned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "card",
            "columnName": "card",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filtered",
            "columnName": "filtered",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "serverId",
            "timelineUserId"
          ]
        },
        "indices": [
          {
            "name": "index_TimelineStatusEntity_authorServerId_timelineUserId",
            "unique": false,
            "columnNames": [
              "authorServerId",
              "timelineUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TimelineStatusEntity_authorServerId_timelineUserId` ON `${TABLE_NAME}` (`authorServerId`, `timelineUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "TimelineAccountEntity",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorServerId",
              "timelineUserId"
            ],
            "referencedColumns": [
              "serverId",
              "timelineUserId"
            ]
          }
        ]
      },
      {
        "tableName": "TimelineAccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `timelineUserId` INTEGER NOT NULL, `localUsername` TEXT NOT NULL, `username` TEXT NOT NULL, `displayName` TEXT NOT NULL, `url` TEXT NOT NULL, `avatar` TEXT NOT NULL, `emojis` TEXT NOT NULL, `bot` INTEGER NOT NULL, `createdAt` INTEGER, `limited` INTEGER NOT NULL DEFAULT false, `note` TEXT NOT NULL DEFAULT '', PRIMARY KEY(`serverId`, `timelineUserId`), FOREIGN KEY(`timelineUserId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "localUsername",
            "columnName": "localUsername",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatar",
            "columnName": "avatar",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "emojis",
            "columnName": "emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "bot",
            "columnName": "bot",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "limited",
            "columnName": "limited",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "serverId",
            "timelineUserId"
          ]
        },
        "indices": [
          {
            "name": "index_TimelineAccountEntity_timelineUserId",
            "unique": false,
            "columnNames": [
              "timelineUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_TimelineAccountEntity_timelineUserId` ON `${TABLE_NAME}` (`timelineUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "timelineUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ConversationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `id` TEXT NOT NULL, `order` INTEGER NOT NULL, `accounts` TEXT NOT NULL, `unread` INTEGER NOT NULL, `s_id` TEXT NOT NULL, `s_url` TEXT, `s_inReplyToId` TEXT, `s_inReplyToAccountId` TEXT, `s_account` TEXT NOT NULL, `s_content` TEXT NOT NULL, `s_createdAt` INTEGER NOT NULL, `s_editedAt` INTEGER, `s_emojis` TEXT NOT NULL, `s_favouritesCount` INTEGER NOT NULL, `s_repliesCount` INTEGER NOT NULL, `s_favourited` INTEGER NOT NULL, `s_bookmarked` INTEGER NOT NULL, `s_sensitive` INTEGER NOT NULL, `s_spoilerText` TEXT NOT NULL, `s_attachments` TEXT NOT NULL, `s_mentions` TEXT NOT NULL, `s_tags` TEXT, `s_showingHiddenContent` INTEGER NOT NULL, `s_expanded` INTEGER NOT NULL, `s_collapsed` INTEGER NOT NULL, `s_muted` INTEGER NOT NULL, `s_poll` TEXT, `s_language` TEXT, PRIMARY KEY(`id`, `accountId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accounts",
            "columnName": "accounts",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unread",
            "columnName": "unread",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.id",
            "columnName": "s_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.url",
            "columnName": "s_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.inReplyToId",
            "columnName": "s_inReplyToId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.inReplyToAccountId",
            "columnName": "s_inReplyToAccountId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.account",
            "columnName": "s_account",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.content",
            "columnName": "s_content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.createdAt",
            "columnName": "s_createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.editedAt",
            "columnName": "s_editedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.emojis",
            "columnName": "s_emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.favouritesCount",
            "columnName": "s_favouritesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.repliesCount",
            "columnName": "s_repliesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.favourited",
            "columnName": "s_favourited",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.bookmarked",
            "columnName": "s_bookmarked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.sensitive",
            "columnName": "s_sensitive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.spoilerText",
            "columnName": "s_spoilerText",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.attachments",
            "columnName": "s_attachments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.mentions",
            "columnName": "s_mentions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.tags",
            "columnName": "s_tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.showingHiddenContent",
            "columnName": "s_showingHiddenContent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.expanded",
            "columnName": "s_expanded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.collapsed",
            "columnName": "s_collapsed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.muted",
            "columnName": "s_muted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStatus.poll",
            "columnName": "s_poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastStatus.language",
            "columnName": "s_language",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "accountId"
          ]
        },
        "indices": [
          {
            "name": "index_ConversationEntity_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ConversationEntity_accountId` ON `${TABLE_NAME}` (`accountId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RemoteKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `timelineId` TEXT NOT NULL, `kind` TEXT NOT NULL, `key` TEXT, PRIMARY KEY(`accountId`, `timelineId`, `kind`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timelineId",
            "columnName": "timelineId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "kind",
            "columnName": "kind",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId",
            "timelineId",
            "kind"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "StatusViewDataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `timelineUserId` INTEGER NOT NULL, `expanded` INTEGER NOT NULL, `contentShowing` INTEGER NOT NULL, `contentCollapsed` INTEGER NOT NULL, `translationState` TEXT NOT NULL DEFAULT 'SHOW_ORIGINAL', PRIMARY KEY(`serverId`, `timelineUserId`), FOREIGN KEY(`timelineUserId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "expanded",
            "columnName": "expanded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentShowing",
            "columnName": "contentShowing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentCollapsed",
            "columnName": "contentCollapsed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "translationState",
            "columnName": "translationState",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "'SHOW_ORIGINAL'"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "serverId",
            "timelineUserId"
          ]
        },
        "indices": [
          {
            "name": "index_StatusViewDataEntity_timelineUserId",
            "unique": false,
            "columnNames": [
              "timelineUserId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_StatusViewDataEntity_timelineUserId` ON `${TABLE_NAME}` (`timelineUserId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "timelineUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TranslatedStatusEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serverId` TEXT NOT NULL, `timelineUserId` INTEGER NOT NULL, `content` TEXT NOT NULL, `spoilerText` TEXT NOT NULL, `poll` TEXT, `attachments` TEXT NOT NULL, `provider` TEXT NOT NULL, PRIMARY KEY(`serverId`, `timelineUserId`))",
        "fields": [
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timelineUserId",
            "columnName": "timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "spoilerText",
            "columnName": "spoilerText",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "poll",
            "columnName": "poll",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attachments",
            "columnName": "attachments",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "provider",
            "columnName": "provider",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "serverId",
            "timelineUserId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LogEntryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `instant` INTEGER NOT NULL, `priority` INTEGER, `tag` TEXT, `message` TEXT NOT NULL, `t` TEXT)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "instant",
            "columnName": "instant",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "tag",
            "columnName": "tag",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "t",
            "columnName": "t",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "MastodonListEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `listId` TEXT NOT NULL, `title` TEXT NOT NULL, `repliesPolicy` TEXT NOT NULL, `exclusive` INTEGER NOT NULL, PRIMARY KEY(`accountId`, `listId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "listId",
            "columnName": "listId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repliesPolicy",
            "columnName": "repliesPolicy",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "exclusive",
            "columnName": "exclusive",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId",
            "listId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ServerEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `serverKind` TEXT NOT NULL, `version` TEXT NOT NULL, `capabilities` TEXT NOT NULL, PRIMARY KEY(`accountId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverKind",
            "columnName": "serverKind",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "capabilities",
            "columnName": "capabilities",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ContentFiltersEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `version` TEXT NOT NULL, `contentFilters` TEXT NOT NULL, PRIMARY KEY(`accountId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "version",
            "columnName": "version",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentFilters",
            "columnName": "contentFilters",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AnnouncementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`accountId` INTEGER NOT NULL, `announcementId` TEXT NOT NULL, `announcement` TEXT NOT NULL, PRIMARY KEY(`accountId`), FOREIGN KEY(`accountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "announcementId",
            "columnName": "announcementId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "announcement",
            "columnName": "announcement",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "accountId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "FollowingAccountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pachliAccountId` INTEGER NOT NULL, `serverId` TEXT NOT NULL, PRIMARY KEY(`pachliAccountId`, `serverId`), FOREIGN KEY(`pachliAccountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "pachliAccountId",
            "columnName": "pachliAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pachliAccountId",
            "serverId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pachliAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pachliAccountId` INTEGER NOT NULL, `serverId` TEXT NOT NULL, `type` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `accountServerId` TEXT NOT NULL, `statusServerId` TEXT, PRIMARY KEY(`pachliAccountId`, `serverId`), FOREIGN KEY(`pachliAccountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`accountServerId`, `pachliAccountId`) REFERENCES `TimelineAccountEntity`(`serverId`, `timelineUserId`) ON UPDATE NO ACTION ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "pachliAccountId",
            "columnName": "pachliAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountServerId",
            "columnName": "accountServerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "statusServerId",
            "columnName": "statusServerId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pachliAccountId",
            "serverId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pachliAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "TimelineAccountEntity",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountServerId",
              "pachliAccountId"
            ],
            "referencedColumns": [
              "serverId",
              "timelineUserId"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationReportEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pachliAccountId` INTEGER NOT NULL, `serverId` TEXT NOT NULL, `reportId` TEXT NOT NULL, `actionTaken` INTEGER NOT NULL, `actionTakenAt` INTEGER, `category` TEXT NOT NULL, `comment` TEXT NOT NULL, `forwarded` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `statusIds` TEXT, `ruleIds` TEXT, `target_serverId` TEXT NOT NULL, `target_timelineUserId` INTEGER NOT NULL, `target_localUsername` TEXT NOT NULL, `target_username` TEXT NOT NULL, `target_displayName` TEXT NOT NULL, `target_url` TEXT NOT NULL, `target_avatar` TEXT NOT NULL, `target_emojis` TEXT NOT NULL, `target_bot` INTEGER NOT NULL, `target_createdAt` INTEGER, `target_limited` INTEGER NOT NULL DEFAULT false, `target_note` TEXT NOT NULL DEFAULT '', PRIMARY KEY(`pachliAccountId`, `serverId`), FOREIGN KEY(`pachliAccountId`, `serverId`) REFERENCES `NotificationEntity`(`pachliAccountId`, `serverId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "pachliAccountId",
            "columnName": "pachliAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reportId",
            "columnName": "reportId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "actionTaken",
            "columnName": "actionTaken",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actionTakenAt",
            "columnName": "actionTakenAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "forwarded",
            "columnName": "forwarded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "statusIds",
            "columnName": "statusIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ruleIds",
            "columnName": "ruleIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "targetAccount.serverId",
            "columnName": "target_serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.timelineUserId",
            "columnName": "target_timelineUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.localUsername",
            "columnName": "target_localUsername",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.username",
            "columnName": "target_username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.displayName",
            "columnName": "target_displayName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.url",
            "columnName": "target_url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.avatar",
            "columnName": "target_avatar",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.emojis",
            "columnName": "target_emojis",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.bot",
            "columnName": "target_bot",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetAccount.createdAt",
            "columnName": "target_createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetAccount.limited",
            "columnName": "target_limited",
            "affinity": "INTEGER",
            "notNull": true,
            "defaultValue": "false"
          },
          {
            "fieldPath": "targetAccount.note",
            "columnName": "target_note",
            "affinity": "TEXT",
            "notNull": true,
            "defaultValue": "''"
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pachliAccountId",
            "serverId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "NotificationEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pachliAccountId",
              "serverId"
            ],
            "referencedColumns": [
              "pachliAccountId",
              "serverId"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationViewDataEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pachliAccountId` INTEGER NOT NULL, `serverId` TEXT NOT NULL, `contentFilterAction` TEXT, `accountFilterDecision` TEXT, PRIMARY KEY(`pachliAccountId`, `serverId`), FOREIGN KEY(`pachliAccountId`) REFERENCES `AccountEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "pachliAccountId",
            "columnName": "pachliAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentFilterAction",
            "columnName": "contentFilterAction",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accountFilterDecision",
            "columnName": "accountFilterDecision",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pachliAccountId",
            "serverId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AccountEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pachliAccountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "NotificationRelationshipSeveranceEventEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`pachliAccountId` INTEGER NOT NULL, `serverId` TEXT NOT NULL, `eventId` TEXT NOT NULL, `type` TEXT NOT NULL, `purged` INTEGER NOT NULL, `followersCount` INTEGER NOT NULL, `followingCount` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, PRIMARY KEY(`pachliAccountId`, `serverId`, `eventId`), FOREIGN KEY(`pachliAccountId`, `serverId`) REFERENCES `NotificationEntity`(`pachliAccountId`, `serverId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "pachliAccountId",
            "columnName": "pachliAccountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "serverId",
            "columnName": "serverId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "purged",
            "columnName": "purged",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "followersCount",
            "columnName": "followersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "followingCount",
            "columnName": "followingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "pachliAccountId",
            "serverId",
            "eventId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "NotificationEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pachliAccountId",
              "serverId"
            ],
            "referencedColumns": [
              "pachliAccountId",
              "serverId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '1853222a207568002bd5cdccf65bc5ba')"
    ]
  }
}